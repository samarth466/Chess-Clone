# Generated by Django 3.1.3 on 2021-01-04 22:39

import UserAuth.fields
import UserAuth.validators
import datetime
import django.contrib.auth.models
import django.contrib.auth.password_validation
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0014_auto_20201126_2338'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(default=None, max_length=200, null=True)),
                ('username', models.CharField(default=None, error_messages={'unique': 'A User with that user name already exists.'}, max_length=128, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('last_name', models.CharField(default=None, max_length=200, null=True)),
                ('email', models.EmailField(default='', max_length=256, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(default=None, max_length=30, null=True, validators=[django.contrib.auth.password_validation.MinimumLengthValidator, django.contrib.auth.password_validation.UserAttributeSimilarityValidator, django.contrib.auth.password_validation.CommonPasswordValidator, django.contrib.auth.password_validation.NumericPasswordValidator])),
                ('birth_date', UserAuth.fields.DateField(date=datetime.datetime(2021, 1, 1, 0, 0), null=True)),
                ('logged_in', models.BooleanField(default=False)),
                ('security_pin', models.CharField(default=None, max_length=20, null=True, unique=True, validators=[UserAuth.validators.validate_isnumeric])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
